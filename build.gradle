buildscript {
   ext {
      queryDslVersion = "5.0.0"
   }
}

plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '2.7.17'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.pingpong.jlab'
version = '0.0.1-SNAPSHOT'


java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.8.0'


	//Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.security:spring-security-taglibs'

	//Social Login
	implementation 'org.springframework.security:spring-security-oauth2-client'
	compileOnly "org.springframework.boot:spring-boot-starter-security"

	//Json Web Token Settings
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//DB Settings
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.28'
	implementation 'mysql:mysql-connector-java'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.1' 
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	//Log4j2 Settings
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'


	//JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok'
	
	//QueryDSL
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	
	//
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//S3 Settings
	implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.4'
	implementation 'com.amazonaws:aws-java-sdk-s3'

	//Spring Doc
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.7.0'

}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"
// JPA 사용 여부와 사용할 경로를 설정
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
// build 시 사용할 sourceSet 추가
sourceSets {
	main.java.srcDir querydslDir
}
// querydsl 컴파일시 사용할 옵션 설정
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
// querydsl 이 compileClassPath 를 상속하도록 설정
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}